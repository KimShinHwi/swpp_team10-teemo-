import React, { Component } from 'react';
import { Redirect } from 'react-router-dom';
import CouponPanel from '../containers/CouponPanel.js';
import LogoutButton from '../containers/LogoutButton.js';
import cookie from 'react-cookies';
import { Input, Select, Button } from 'semantic-ui-react';
import '../popup.css';

class CustomerPage extends Component {

	componentDidMount() {
		fetch("http://localhost:8000/api/coupon_list_of_customer/", {
			method: 'GET',
			headers: {
				'Accept' : 'application/json',
				'Content-Type' : 'application/json',
				'X-CSRFToken' : cookie.load('csrftoken'),
			},
			credentials: 'include',
		}).then((response) => {
			console.log(response);
			if(response.ok)
			{
				response.json().then((array)=>{
					let searchResult = array.map((cursor)=>{
						return {
							couponId: cursor.coupon.id,
							storeName: cursor.coupon.store.name,
							stampCount: cursor.coupon.stamp_count,
						}
					})
					//this.props.onSetCustomerCouponList(searchResult);	
					this.setState ({
						searchResult: searchResult,
					})
				})
			}
			else
			{
				throw Error(response.statusText);
			}
		}).catch((err) => {
			console.log("coupon_list_of_customer error");
			return;
		})
	}


	onClickPopup = () => {
		this.setState({
			popupToggle: true,
		})
	}

	onSubmitHandOver = (event) => {
		event.preventDefault();
		console.log(this.selectedStore, this.givingStampCount, this.targetCustomerName);
		fetch("http://localhost:8000/api/coupon_giving/"+this.state.searchResult.find((cursor)=>{
			return cursor.storeName === this.selectedStore
		}).couponId, {
			method: 'PUT',
			headers: {
				'Accept' : 'application/json',
				'Content-Type' : 'application/json',
				'X-CSRFToken' : cookie.load('csrftoken'),
			},
			body: JSON.stringify({
				customer: this.targetCustomerName,
				stamp_count: this.givingStampCount,
			}),
			credentials: 'include',
		}).then((response) => {
			console.log(response);
			if(response.ok)
			{
				console.log("Hand over success")
				this.setState({
					popupToggle: false,
				})
				this.componentDidMount()
			}
			else
			{
				console.log("Hand over failed, check required fields")
			}
		})
	}

	captureSelectStore = (event) => {
		this.selectedStore = event.target.value;
	}
	captureStampCount = (event) => {
		this.givingStampCount = event.target.value;
	}
	captureCustomerName = (event) => {
		this.targetCustomerName = event.target.value;
	}
	onClickPopupClose = (event) => {
		event.preventDefault();
		this.setState({
			popupToggle: false,
		})
	}

	render() {
		if(!this.props.statefunction.isLoggedIn)
		{
			return <Redirect to="/"/>
		}
		else if(this.props.statefunction.loggedInUserType === 'store')
		{
			return <Redirect to="/Store"/>
		}

		const HandOverButton = () => {
			return (
				<div>
			<Input placeholder='Type store name' onChange={this.captureSelectStore}/>
			<Input placeholder='How many stamps' onChange={this.captureStampCount}/>
			<Input placeholder='Type customer account' onChange={this.captureCustomerName}/>
			<Button onClick={this.onSubmitHandOver}>Hand over</Button>
			</div>
			)}

		const Popup = (
			<div className='popup'>
				<div className='popup_inner'>
					<HandOverButton/>
					<Button onClick={this.onClickPopupClose}>
						Close
					</Button>
				</div>
			</div>
		);


		let key=0;
		let dummyFunction = ()=>{return};
		return (
			<div className="CustomerPage">
				<h1> Customer Page </h1>
				<LogoutButton/>
				<Button onClick={this.onClickPopup}>
					Hand over
				</Button>

				{this.state===null
					? null
					: 
					this.state.popupToggle 
						? Popup
						:
					this.state.searchResult.map((cursor)=>{
						return(
						<div key={key++}>
							<h2> Store: {cursor.storeName} </h2>		
							<CouponPanel onClickStamp={dummyFunction} stampCount={cursor.stampCount}/>
						</div>)
					})
				}
			</div>
		);
	}
}

export default CustomerPage;
